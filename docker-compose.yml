version: "3"
services:
  frontend:
    restart: unless-stopped
    build:
      context: ./frontend
      dockerfile: dockerfile
    networks:
      - docker_task3
    ports:
    - 3000:80
    logging:
      driver: "json-file"
      options:
        max-size: 100m
    deploy:
      resources:
        limits:
          cpus: '1.50'
          memory: 250M
        reservations:
          cpus: '0.50'
          memory: 120M


  backend:
    restart: unless-stopped
    build:
      context: ./lib_catalog
      dockerfile: dockerfile
    command: bash -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    networks:
      - docker_task3
    ports:
      - 8000:8000
    logging:
      driver: "json-file"
      options:
        max-size: 100m
    depends_on:
        - database
    deploy:
      resources:
        limits:
          cpus: '1.50'
          memory: 250M
        reservations:
          cpus: '0.50'
          memory: 120M

  database:
    image: postgres:latest
    restart: always
    environment:
      - POSTGRES_PASSWORD=django
      - POSTGRES_USER=django
      - POSTGRES_DB=django
    logging:
      driver: "json-file"
    networks:
      - docker_task3
#    volumes:
#      - database:/var/lib/postgresql/data
    deploy:
      resources:
        limits:
          cpus: '1.50'
          memory: 250M
        reservations:
          cpus: '0.50'
          memory: 120M

networks:
  docker_task3:
    driver: bridge

#volumes:
#  database: